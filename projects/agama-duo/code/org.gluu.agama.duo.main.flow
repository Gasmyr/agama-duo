Flow org.gluu.agama.duo.main
     Basepath ""
     Configs conf
authService = Call io.jans.as.server.service.AuthenticationService#class 
// Create new cdiUtil object.
cdiUtil = Call io.jans.service.cdi.util.CdiUtil#bean authService
// Empty Result Object
authResult = {}
// retry 3 times
Repeat 3 times max
     // loads login page for username and password input
     creds = RRF "login.ftlh" authResult
     // validate username and password
     authResult.success = Call cdiUtil authenticate creds.username creds.password
     // keep username in case user wants to retry
     authResult.uid = creds.username
     // check auth response
     When authResult.success is true
          authUrl = {}
          clientId = conf.clientId
          clientSecret = conf.clientSecret
          apiHost = conf.apiHost
          redirectUri = conf.redirectUri
          duoClientService | E = Call org.gluu.agama.duo.DuoClientService#new clientId clientSecret apiHost redirectUri
authUrl.url | E = Call duoClientService duoValidate 
Log "@info check" E  authUrl
callbackResult = RFAC authUrl.url
Log "@info callbackResult " callbackResult
callbackState = {}
callbackState.data | calbackE = Call duoClientService validateCallback callbackResult creds.username
Log "@info  callback data " callbackState.data calbackE
When callbackState.data is not "false"
     it_zxmad = {success:true, data:  {userId: authResult.uid }}
     Finish it_zxmad
Log "@info  when callbackState.data " callbackState.data
     // check logs after when condition
     Log "@info " post when log
it_pplni = {success:false, error: "auth failed"}
Finish it_pplni